#!/usr/bin/env sh

# Setup utility
# by David Oniani <onianidavid@gmail.com>
# License: MIT License

install_config() {
    cp -R .config "$HOME"
    cp -R .local "$HOME"
    cp .zshenv "$HOME"

    mkdir -p "$HOME/bld" "$HOME/dls" "$HOME/doc" "$HOME/git" "$HOME/pic" "$HOME/wip"
    mkdir -p "${XDG_CACHE_HOME:-$HOME/.cache}"
}

install_drawio() {
    curl -s "https://api.github.com/repos/jgraph/drawio-desktop/releases/latest" |
        grep "browser_download_url.*\.deb" |
        cut -d '"' -f 4 |
        wget -i -

    sudo apt purge -y --autoremove draw.io
    sudo apt install -y ./drawio-amd64-*.deb
    rm -f ./drawio-amd64-*.deb
}

install_go() {
    rm -rf "$HOME"/.local/share/go
    link="https://go.dev/dl/"
    tarball=$(curl -s $link | grep "downloadBox.*linux" | cut -d '"' -f 4 | cut -d '/' -f 3)
    wget "$link$tarball" -O "$tarball"
    tar -C "$HOME"/.local/share -xzf "$tarball"
    rm -f "$tarball"
}

install_kitty() {
    rm -rf "$HOME"/.local/share/kitty
    link=$(curl -s "https://api.github.com/repos/kovidgoyal/kitty/releases/latest" |
        grep "browser_download_url" |
        cut -d '"' -f 4 |
        grep "x86_64.txz$")
    tarball=$(printf "%s" "$link" | cut -d '/' -f 9)
    wget "$link" -O "$tarball"
    mkdir -p "$HOME"/.local/share/kitty
    tar -C "$HOME"/.local/share/kitty -xJf "$tarball"
    rm -rf "$tarball"
}

install_nerd_fonts() {
    git clone https://github.com/ryanoasis/nerd-fonts
    cd nerd-fonts && sudo ./install.sh
    cd .. && rm -rf nerd-fonts
}

install_nnn() {
    git clone https://github.com/jarun/nnn
    cd nnn && make O_NERD=1 && sudo make install
    cd .. && rm -rf nnn
}

install_nsxiv() {
    git clone https://github.com/nsxiv/nsxiv
    cd nsxiv && make && sudo make install-all
    cd .. && rm -rf nsxiv
}

install_pyenv() {
    curl https://pyenv.run | bash
}

install_rustup() {
    curl --proto "=https" --tlsv1.2 -sSf https://sh.rustup.rs | sh
}

install_zsh() {
    autosuggestions="${XDG_DATA_HOME:-$HOME/.local/share}/zsh/plugin/zsh-autosuggestions"
    syntaxhighlighting="${XDG_DATA_HOME:-$HOME/.local/share}/zsh/plugin/zsh-syntax-highlighting"
    rm -rf "$autosuggestions" "$syntaxhighlighting"
    git clone https://github.com/zsh-users/zsh-autosuggestions "$autosuggestions"
    git clone https://github.com/zsh-users/zsh-syntax-highlighting "$syntaxhighlighting"
}

help() {
    printf "USAGE: ./setup [OPTION]\n\
    --config    Install configuration files\n\
    --drawio    Install drawio desktop\n\
    --go        Install the Go programming language\n\
    --kitty     Install kitty terminal emulator\n\
    --nerdfonts Install Nerd Fonts\n\
    --nnn       Clone, build, and install nnn from the source (+ file icon support <3)\n\
    --nsxiv     Clone, build, and install nsxiv from the source\n\
    --pyenv     Install pyenv\n\
    --rustup    Install rustup\n\
    --zsh       Clone and set up Z Shell plugins from the source\n"
}

case $1 in
    "--config") install_config;;
    "--drawio") install_drawio;;
    "--go") install_go;;
    "--kitty") install_kitty;;
    "--nerdfonts") install_nerd_fonts;;
    "--nnn") install_nnn;;
    "--nsxiv") install_nsxiv;;
    "--pyenv") install_pyenv;;
    "--rustup") install_rustup;;
    "--zsh") install_zsh;;
    *) help;;
esac
